{
  "root": {
    "id": {
      "id": "fuse/controls/textcontrol",
      "parentId": "fuse/controls",
      "type": "Class",
      "modifiers": [
        "public",
        "abstract",
        "partial"
      ]
    },
    "uri": {
      "idUri": "fuse/controls/textcontrol",
      "href": "fuse/controls/textcontrol"
    },
    "titles": {
      "indexTitle": "TextControl",
      "fullyQualifiedIndexTitle": "Fuse.Controls.TextControl"
    }
  },
  "descendants": [
    {
      "id": {
        "id": "alive/body",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/body",
        "href": "alive/body"
      },
      "titles": {
        "indexTitle": "Body",
        "fullyQualifiedIndexTitle": "Alive.Body"
      }
    },
    {
      "id": {
        "id": "alive/bodybold",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/bodybold",
        "href": "alive/bodybold"
      },
      "titles": {
        "indexTitle": "BodyBold",
        "fullyQualifiedIndexTitle": "Alive.BodyBold"
      }
    },
    {
      "id": {
        "id": "alive/buttontext",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/buttontext",
        "href": "alive/buttontext"
      },
      "titles": {
        "indexTitle": "ButtonText",
        "fullyQualifiedIndexTitle": "Alive.ButtonText"
      }
    },
    {
      "id": {
        "id": "alive/icon",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/icon",
        "href": "alive/icon"
      },
      "titles": {
        "indexTitle": "Icon",
        "fullyQualifiedIndexTitle": "Alive.Icon"
      }
    },
    {
      "id": {
        "id": "alive/navbartitle",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/navbartitle",
        "href": "alive/navbartitle"
      },
      "titles": {
        "indexTitle": "NavBarTitle",
        "fullyQualifiedIndexTitle": "Alive.NavBarTitle"
      }
    },
    {
      "id": {
        "id": "alive/subtitle",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/subtitle",
        "href": "alive/subtitle"
      },
      "titles": {
        "indexTitle": "Subtitle",
        "fullyQualifiedIndexTitle": "Alive.Subtitle"
      }
    },
    {
      "id": {
        "id": "alive/title",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/title",
        "href": "alive/title"
      },
      "titles": {
        "indexTitle": "Title",
        "fullyQualifiedIndexTitle": "Alive.Title"
      }
    },
    {
      "id": {
        "id": "basic/text",
        "parentId": "basic",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "basic/text",
        "href": "basic/text"
      },
      "titles": {
        "indexTitle": "Text",
        "fullyQualifiedIndexTitle": "Basic.Text"
      }
    },
    {
      "comment": {
        "brief": "Displays a block of text.",
        "full": "Displays a block of text.\n\nThe `Text` UI-control renders read-only text.\n\nYou can import a @Font from ttf files containing TrueType fonts. Because a font is typically referred to throughout an application, it is best to simply create a global resource for it using `ux:Global`. This way of importing the font ensures that the font is available throughout the whole project, and is only loaded once.\n\n> **Note**\n>\n> When running desktop preview, neither fallback fonts, colored glyphs, nor Unicode characters outside the basic multilingual plane are supported.\n>\n> Because of this, **certain text features (e.g. emoji) are not supported when running local preview.**\n> Do not be surprised if desktop rendering doesn't match device rendering 100%. This is an issue that is being worked on.\r\n\n# Examples \n\n## Text properties\n\n```\n<Text Color=\"#999\">Left</Text>\n<Text TextAlignment=\"Center\">Center</Text>\n<Text FontSize=\"24\" TextAlignment=\"Right\">Right</Text>\n<Text LineSpacing=\"10\">\nMultiple\nLines\n</Text>\n```\n\nIn this example, the first text element will be left aligned as this is the default, and have its color set to a medium light grey. The second text will be center aligned. The third will be right aligned and have a larger font. The fourth will span two lines with 10 points of space inbetween.\n\n## Custom text-components\n\n\t<App>\n\t\t<Font File=\"Roboto-Medium.ttf\" ux:Global=\"Medium\" />\n\t\t<Font File=\"Roboto-Light.ttf\" ux:Global=\"Light\" />\n\n\t\t<Text ux:Class=\"Light\" Font=\"Light\" />\n\t\t<Text ux:Class=\"Medium\" Font=\"Medium\" TextWrapping=\"Wrap\" />\n\t\t<Text ux:Class=\"Warning\" \n\t\t\tFont=\"Medium\" \n\t\t\tFontSize=\"42\"\n\t\t\tTextAlignment=\"Center\"\n\t\t\tColor=\"#f00\" />\n\t\t\t\n\t\t<StackPanel>\n\t\t\t<Light>Just some text</Light>\n\t\t\t<Warning>The robots are coming!</Warning>\n\t\t\t<Medium>This is just some medium text, but it will happily wrap when the edges of the screen is reached.</Medium>\n\t\t</StackPanel>\n\t</App>\n\nIn this example we load two fonts and create three different semantic classes, `Light`, `Medium` and `Warning`, combining some of the available `Text` properties. In this example, the fonts are located in the same directory as the relevant UX file. \r\n\n# Remarks\n\n`Text` is the primary control for displaying read-only text in apps."
      },
      "id": {
        "id": "fuse/controls/text",
        "parentId": "fuse/controls",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/controls/text",
        "href": "fuse/controls/text"
      },
      "titles": {
        "indexTitle": "Text",
        "fullyQualifiedIndexTitle": "Fuse.Controls.Text"
      }
    },
    {
      "comment": {
        "brief": "Deprecated, for backwards compatibility",
        "full": "Deprecated, for backwards compatibility"
      },
      "id": {
        "id": "fuse/controls/textblock",
        "parentId": "fuse/controls",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/controls/textblock",
        "href": "fuse/controls/textblock"
      },
      "titles": {
        "indexTitle": "TextBlock",
        "fullyQualifiedIndexTitle": "Fuse.Controls.TextBlock"
      }
    }
  ]
}